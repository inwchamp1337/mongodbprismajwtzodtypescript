services:
  mongo_db:
    container_name: database_container
    image: mongo:latest
    restart: always
    command: [ "--replSet", "rs0", "--bind_ip_all" ]
    ports:
      - "27018:27017"
    volumes:
      - mongo_db:/data/db
    healthcheck:
      test: >
        mongosh --eval "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'localhost:27017'}]}) }"
      interval: 5s
      timeout: 30s
      retries: 30
      start_period: 10s

  redis:
    image: redis:alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 30s
      retries: 30
    restart: always

  app:
    build: .
    ports:
      - 3001:3001
      - 5555:5555
    environment:
      APP_NAME: LearnDocker
      PORT: 3001
      DATABASE_URL: "mongodb://mongo_db:27017/dockerlearn?replicaSet=rs0&directConnection=true"
    depends_on:
      mongo_db:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  mongo_db: {}
  redis_data: {}
